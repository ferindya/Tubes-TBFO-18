S -> ENTER S
S -> S ENTER
S -> ENTER
S -> SS
SS -> PART SS
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> SENTENCE
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> SENTENCE
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_SENTENCE -> RETURN STATIC
FUNC_SENTENCE -> RETURN EXP
FUNC_SENTENCE -> RETURN LOGI_OP
FUNC_SENTENCE -> IF_BLOCK
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE RETURN STATIC
FUNC_SENTENCE -> FUNC_SENTENCE RETURN EXP
FUNC_SENTENCE -> FUNC_SENTENCE RETURN LOGI_OP
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNCTION -> ID KBKI KBKA
FUNCTION -> ID KBKI PARAM KBKA
FUNCTION -> ID KBKI PARAMFUNGSI KBKA
PARAMFUNGSI -> ID
PARAMFUNGSI -> ID COMMA PARAMFUNGSI
FOR_STMT -> FOR KBKI EXP EXP TITIKOMA EXP KBKA KKKI ENTER LOOP_SENTENCE TITIKOMA ENTER KKKA
FOR_STMT -> FOR KBKI EXP TITIKOMA EXP TITIKOMA EXP KBKA KKKI ENTER LOOP_SENTENCE TITIKOMA ENTER KKKA
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
LOOP_SENTENCE -> LOOP_SENTENCE TITIKOMA ENTER LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK 
EXP -> ID
EXP -> BOOL
EXP -> IDINT
EXP -> LET_STMT
EXP -> EXP ARIT_OPERATOR EXP
EXP -> EXP COM_OPERATOR EXP
EXP -> EXP COM_OPERATOR ASSIGNMENT
EXP -> ID EQ ID
EXP -> ID INCR
EXP -> ID DECR
EXP -> LIST KSKI ID KSKA
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUB
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> MOD
ARIT_OPERATOR -> POW
ARIT_OPERATOR -> INCR
ARIT_OPERATOR -> DECR
ARIT_OP -> ID ARIT_OPERATOR ARIT_OP
ARIT_OP -> STATIC ARIT_OPERATOR ARIT_OP
ARIT_OP -> ID ARIT_OPERATOR ID
ARIT_OP -> STATIC ARIT_OPERATOR ID
ARIT_OP -> ID ARIT_OPERATOR STATIC
ARIT_OP -> STATIC ARIT_OPERATOR STATIC
ARIT_OP -> KBKI ARIT_OP KBKA
ARIT_OP -> TYPE KBKI ARIT_OP KBKA
ASSIGN_OP -> EQ
ASSIGN_OP -> SUBAS
ASSIGN_OP -> MULAS
ASSIGN_OP -> ADDAS
ASSIGN_OP -> DIVAS
ASSIGN_OP -> MODAS
ASSIGN_OP -> POWAS
COM_OPERATOR -> ISEQ
COM_OPERATOR -> NEQ
COM_OPERATOR -> LEQ
COM_OPERATOR -> L
COM_OPERATOR -> GEQ
COM_OPERATOR -> G
COM_OPERATOR -> EQVNT
COM_OPERATOR -> NEQVNT
COM_OPERATOR -> TERN
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
LOGI_OPERATOR -> NOT
IF_STMT -> IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI ENTER SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA ENTER KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI ENTER SENTENCE TITIKOMA ENTER KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI ENTER SENTENCE TITIKOMA KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA ELSE_STMT
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA KKKA ELSE_STMT
ELSE_STMT -> ELSE KKKI ENTER SENTENCE TITIKOMA ENTER KKKA
ELSE_STMT -> ELSE KKKI ENTER SENTENCE TITIKOMA KKKA
ELSE_STMT -> ELSE KKKI SENTENCE TITIKOMA ENTER KKKA
ELSE_STMT -> ELSE KKKI SENTENCE TITIKOMA KKKA
ELSE_STMT -> ENTER ELSE KKKI ENTER SENTENCE TITIKOMA ENTER KKKA
ELSE_STMT -> ENTER ELSE KKKI ENTER SENTENCE TITIKOMA KKKA
ELSE_STMT -> ENTER ELSE KKKI SENTENCE TITIKOMA ENTER KKKA
ELSE_STMT -> ENTER ELSE KKKI SENTENCE TITIKOMA KKKA
IF_BLOCK -> IF_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
WHILE_STMT -> WHILE KBKI EXP KBKA ENTER KKKI ENTER LOOP_SENTENCE ENTER EXP TITIKOMA ENTER KKKA 
WHILE_STMT -> WHILE KBKI EXP KBKA KKKI ENTER LOOP_SENTENCE TITIKOMA KKKA
WHILE_STMT -> WHILE KBKI EXP KBKA KKKI LOOP_SENTENCE TITIKOMA ENTER KKKA
WHILE_STMT -> WHILE KBKI EXP KBKA KKKI LOOP_SENTENCE TITIKOMA KKKA
WHILE_STMT -> DO KKKI ENTER LOOP_SENTENCE TITIKOMA ENTER EXP TITIKOMA ENTER KKKA WHILE KBKI EXP KBKA TITIKOMA
BOOL -> TRUE
BOOL -> FALSE
BOOL -> NOT BOOL
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
ID -> KBKI IDINT KBKA
IDINT -> ID
IDINT -> INT
IDINT -> BOOL
IDINT -> NULL
ASSIGNMENT -> KARTITIK
ASSIGNMENT -> OPERATION
ASSIGNMENT -> ID
ASSIGNMENT -> INT
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
ASSIGNMENT -> ARRAY
ASSIGNMENT -> LIST
ASSIGNMENT -> METHOD_STMT
ASSIGNMENT -> SET
ASSIGNMENT -> TUPLE
ASSIGN -> ID ASSIGN_OP ASSIGNMENT
ASSIGN -> KARTITIK ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY ASSIGN_OP ASSIGNMENT
PARAM -> KARTITIK
PARAM -> ID
PARAM -> STATIC
PARAM -> PARAM COMMA PARAM
PARAM -> ARIT_OP
PARAM -> LOGI_OP
PARAM -> METHOD_STMT
LIST -> KSKI KSKA
LIST -> KSKI PARAM KSKA
SET -> NEWSET KBKI KBKA TITIKOMA
SET -> NEWSET KBKI KSKI PARAM KSKA KBKA TITIKOMA
SET -> NEWSET KBKI KSKI LIST KSKA KBKA TITIKOMA
NEWSET -> NEW SET
TUPLE -> KBKI KBKA TITIKOMA
TUPLE -> KBKI PARAM KBKA TITIKOMA
STATIC -> INT
STATIC -> STRING
STATIC -> KARTITIK
STATIC -> BOOL
STATIC -> LIST
STATIC -> SET
STATIC -> TUPLE
OPERATION -> ARIT_OP
OPERATION -> LOGI_OP
LOGI_ID -> FUNCTION
LOGI_ID -> METHOD_STMT
LOGI_ID -> IDINT
LOGI_ID -> NOT IDINT
LOGI_ID -> BOOL
LOGI_OP -> ID
LOGI_OP -> NOT LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_ID COM_OPERATOR LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_ID
LOGI_OP -> LOGI_ID COM_OPERATOR LOGI_ID
LOGI_OP -> KBKI LOGI_OP KBKA
SENTENCE -> ID ASSIGN_OP EXP
SENTENCE -> ID STATIC
SENTENCE -> ID ASSIGN_OP ASSIGNMENT
SENTENCE -> IF_BLOCK
SENTENCE -> FUNC_SENTENCE
SENTENCE -> FUNCTION
SENTENCE -> ASSIGN
SENTENCE -> METHOD_STMT
SENTENCE -> FOR_STMT
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
SENTENCE -> CONTINUE
SENTENCE -> BREAK
SENTENCE -> SENTENCE LIST ARIT_OP STATIC
SENTENCE -> STATIC TUPLE TITIK EXP
VAR_STMT -> VAR SENTENCE TITIKOMA
VAR_STMT -> VAR_STMT ENTER KKKI ENTER VAR_STMT ENTER KKKA
VAR_STMT -> VAR_STMT ENTER KKKI ENTER VAR_STMT KKKA
VAR_STMT -> VAR_STMT ENTER KKKI VAR_STMT ENTER KKKA
VAR_STMT -> VAR_STMT ENTER KKKI VAR_STMT KKKA
LET_STMT -> LET SENTENCE TITIKOMA
LET_STMT -> LET_STMT ENTER KKKI ENTER LET_STMT ENTER KKKA
LET_STMT -> LET_STMT ENTER KKKI ENTER LET_STMT KKKA
LET_STMT -> LET_STMT ENTER KKKI LET_STMT ENTER KKKA
LET_STMT -> LET_STMT ENTER KKKI LET_STMT KKKA
ARRAY -> ID LIST
METHOD_STMT -> ID KSKI IDINT KSKA TITIK ID
METHOD_STMT -> ID KSKI IDINT KSKA TITIK FUNCTION
METHOD_STMT -> KARTITIK KBKI KBKA
METHOD_STMT -> KARTITIK KBKI PARAM KBKA
METHOD_STMT -> KARTITIK KBKI PARAMFUNGSI KBKA
THROW_STMT -> THROW ASSIGNMENT 
SWITCH_STMT -> SWITCH KBKI ID KBKA KKKI ENTER CASE_STMT ENTER DEFAULT_STMT ENTER KKKA
CASE_STMT -> CASE STATIC TITIKDUA ENTER SENTENCE TITIKOMA ENTER SENTENCE TITIKOMA
CASE_STMT -> CASE_STMT ENTER CASE_STMT
DEFAULT_STMT -> DEFAULT TITIKDUA ENTER SENTENCE TITIKOMA
DELETE_STMT -> DELETE ID TITIK PARAM
TRY_STMT -> TRY KKKI SENTENCE KKKA CATCH_STMT
TRY_STMT -> TRY KKKI ENTER SENTENCE TITIKOMA ENTER KKKA ENTER CATCH_STMT
TRY_STMT -> TRY KKKI ENTER SENTENCE ENTER KKKA CATCH_STMT
TRY_STMT -> TRY KKKI SENTENCE KKKA CATCH_STMT FINALLY_STMT
TRY_STMT -> TRY KKKI SENTENCE KKKA FINALLY_STMT
CATCH_STMT -> CATCH KBKI ID KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA
CATCH_STMT -> CATCH KBKI ID KBKA KKKI NEWLINE SENTENCE TITIKOMA NEWLINE KKKA
CATCH_STMT -> CATCH KKKI SENTENCE TITIKOMA KKKA 
FINALLY_STMT -> FINALLY KKKI SENTENCE TITIKOMA KKKA
CONST_STMT -> CONST ID ASSIGN_OP ASSIGNMENT TITIKOMA