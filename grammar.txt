S -> ENTER S
S -> S ENTER
S -> ENTER
S -> IMPORT_STMT
S -> IMPORT_STMT ENTER S
S -> IMPORT_STMT ENTER SS
S -> SS
SS -> PART SS
PART -> CLASS_STMT
PART -> FUNC_STMT
PART -> FOR_STMT
PART -> IF_STMT
PART -> WHILE_STMT
PART -> SENTENCE
PART -> KONST
SS -> CLASS_STMT
SS -> FUNC_STMT
SS -> FOR_STMT
SS -> IF_STMT
SS -> WHILE_STMT
SS -> SENTENCE
SENTENCE -> IF_BLOCK
SENTENCE -> FUNC_SENTENCE
SENTENCE -> FUNCTION
SENTENCE -> VAR ASSIGN
SENTENCE -> LET ASSIGN
SENTENCE -> METHOD_STMT
SENTENCE -> WITH_STATE
SENTENCE -> FOR_STMT
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
SENTENCE -> CONTINUE
SENTENCE -> BREAK
STRINGFORMAT -> STRING TITIK FORMAT KBKI ARIT_OP KBKA
STRINGFORMAT -> STRING TITIK FORMAT KBKI ID KBKA
LIST -> CONST KSKI KSKA TITIKOMA
LIST -> CONST KSKI PARAM KSKA TITIKOMA
SET -> CONST NEWSET KBKI KBKA TITIKOMA
SET -> CONST NEWSET KBKI KSKI PARAM KSKA KBKA TITIKOMA
NEWSET -> NEW SET 
TUPLE -> CONST KBKI KBKA TITIKOMA
TUPLE -> CONST KBKI PARAM KBKA TITIKOMA
ARIT_OP -> ID ARIT_OPERATOR ARIT_OP
ARIT_OP -> STATIC ARIT_OPERATOR ARIT_OP
ARIT_OP -> ID ARIT_OPERATOR ID
ARIT_OP -> STATIC ARIT_OPERATOR ID
ARIT_OP -> ID ARIT_OPERATOR STATIC
ARIT_OP -> STATIC ARIT_OPERATOR STATIC
ARIT_OP -> KBKI ARIT_OP KBKA
ARIT_OP -> TYPE KBKI ARIT_OP KBKA
ARIT_OPERATOR -> ADD
ARIT_OPERATOR -> SUB
ARIT_OPERATOR -> MUL
ARIT_OPERATOR -> DIV
ARIT_OPERATOR -> MOD
ARIT_OPERATOR -> POW
ARIT_OPERATOR -> FLOORDIV
LOGI_ID -> FUNCTION
LOGI_ID -> METHOD_STMT
LOGI_ID -> IDINT
LOGI_ID -> NOT IDINT
LOGI_ID -> BOOL
THROW_STMT -> THROW ASSIGNMENT 
DELETE_STMT -> DELETE ID TITIK PARAM
LOGI_ID -> KBKI LOGI_ID KBKA
BOOL -> NOT BOOL
LOGI_OP -> ID
LOGI_OP -> NOT LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_OP
LOGI_OP -> LOGI_ID LOGI_OPERATOR LOGI_ID
LOGI_OP -> KBKI LOGI_OP KBKA
LOGI_OPERATOR -> ISEQ
LOGI_OPERATOR -> LEQ
LOGI_OPERATOR -> NEQ
LOGI_OPERATOR -> GEQ
LOGI_OPERATOR -> AND
LOGI_OPERATOR -> OR
LOGI_OPERATOR -> NOT
LOGI_OPERATOR -> XOR
LOGI_OPERATOR -> LEFT SHIFT
LOGI_OPERATOR -> RIGHT SHIFT
LOGI_OPERATOR -> UNSIGNED RIGHT SHIFT
WITH_STATE -> WITH KBKI PARAMFUNGSI KBKA KKKI SENTENCE TITIKOMA KKKA
PARAM -> ALL
PARAM -> KARTITIK
PARAM -> STATIC
PARAM -> PARAM COMMA PARAM
PARAM -> ARIT_OP
PARAM -> LOGI_OP
PARAM -> METHOD_STMT
PARAM -> KBKA
ID_FUNC -> ID
ID_FUNC -> ID TITIKDUA TYPE
PARAMFUNGSI -> ID_FUNC EQ STATIC
PARAMFUNGSI -> ID_FUNC
PARAMFUNGSI -> ID_FUNC COMMA PARAMFUNGSI
PARAMFUNGSI -> ID_FUNC EQ STATIC COMMA PARAMFUNGSI
STATIC -> INT
STATIC -> STRING
STATIC -> BOOL
STATIC -> LIST
STATIC -> SET
STATIC -> TUPLE
METHOD_STMT -> ID KSKI IDINT KSKA TITIK ID
METHOD_STMT -> ID KSKI IDINT KSKA TITIK FUNCTION
METHOD_STMT -> KARTITIK KBKI KBKA
METHOD_STMT -> KARTITIK KBKI PARAM KBKA
METHOD_STMT -> KARTITIK KBKI PARAMFUNGSI KBKA
METHOD_STMT -> CONSTRUCTOR KBKI KBKA
METHOD_STMT -> CONSTRUCTOR KBKI
EXP -> ID KBKI KBKA
EXP -> ID KBKI PARAM KBKA
EXP -> BOOL
EXP -> IDINT
EXP -> EXP ARIT_OPERATOR EXP
EXP -> TYPE KBKI EXP KBKA
STMT -> EXP LOGI_OPERATOR EXP
IF_STMT -> IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI STMT KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI STMT KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI STMT KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI STMT KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
IF_STMT -> IF KBKI STMT KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI STMT KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI ID KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI ID KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI ID KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI ID KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
IF_STMT -> IF KBKI ID KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI ID KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI FUNCTION KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI FUNCTION KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI FUNCTION KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI FUNCTION KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
IF_STMT -> IF KBKI FUNCTION KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI FUNCTION KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI METHOD_STMT KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI METHOD_STMT KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI METHOD_STMT KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI METHOD_STMT KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
IF_STMT -> IF KBKI METHOD_STMT KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI METHOD_STMT KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA KKKI SENTENCE TITIKOMA KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
IF_STMT -> IF KBKI LOGI_OP KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
IF_STMT -> IF KBKI LOGI_OP KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI EXP KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
ELIF_STMT -> ELSE IF KBKI EXP KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
ELIF_STMT -> ELSE IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
ELIF_STMT -> ELSE IF KBKI EXP KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI STMT KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI STMT KBKA KKKI SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI STMT KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
ELIF_STMT -> ELSE IF KBKI STMT KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
ELIF_STMT -> ELSE IF KBKI STMT KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
ELIF_STMT -> ELSE IF KBKI STMT KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI LOGI_OP KBKA KKKI ENTER SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI LOGI_OP KBKA KKKI SENTENCE TITIKOMA KKKA
ELIF_STMT -> ELSE IF KBKI LOGI_OP KBKA KKKI SENTENCE TITIKOMA ENTER KKKA
ELIF_STMT -> ELSE IF KBKI LOGI_OP KBKA KKKI ENTER SENTENCE TITIKOMA ENTER KKKA 
ELIF_STMT -> ELSE IF KBKI LOGI_OP KBKA ENTER KKKI SENTENCE TITIKOMA ENTER KKKA
ELIF_STMT -> ELSE IF KBKI LOGI_OP KBKA ENTER KKKI SENTENCE TITIKOMA KKKA
ELIF_BANYAK -> ELIF_STMT
ELIF_BANYAK -> ELIF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT
IF_BLOCK -> IF_STMT ELIF_BANYAK
IF_BLOCK -> IF_STMT ELIF_BANYAK ELSE_STMT
IF_BLOCK -> IF_STMT ELSE_STMT
ARRAY -> ID LIST
ASSIGN -> ID ASSIGN_OP ASSIGNMENT
ASSIGN -> KARTITIK ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY ASSIGN_OP ASSIGNMENT
ASSIGN -> ARRAY LIST ASSIGN_OP ASSIGNMENT
ASSIGN_OP -> EQ
ASSIGN_OP -> ADDAS
ASSIGN_OP -> MULAS
ASSIGN_OP -> SUBAS
ASSIGN_OP -> POWAS
ASSIGN_OP -> DIVAS
ASSIGN_OP -> MODAS
OPERATION -> ARITH_OP
OPERATION -> LOGIC_OP
ASSIGNMENT -> KARTITIK
ASSIGNMENT -> OPERATION
ASSIGNMENT -> ID
ASSIGNMENT -> INT
ASSIGNMENT -> STRING
ASSIGNMENT -> FUNCTION
ASSIGNMENT -> ARRAY
ASSIGNMENT -> LIST
ASSIGNMENT -> METHOD_STMT
ASSIGNMENT -> SET
ASSIGNMENT -> TUPLE
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI PARAMFUNGSI KBKA KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> FUNC ID KBKI KBKA KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI PARAMFUNGSI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI PARAMFUNGSI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI PARAMFUNGSI KBKA KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI PARAMFUNGSI KBKA KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI KBKA KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI KBKA KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP FUNC KBKI KBKA KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI PARAMFUNGSI KBKA ARROW KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI PARAMFUNGSI KBKA ARROW KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI PARAMFUNGSI KBKA ARROW KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI PARAMFUNGSI KBKA ARROW KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI KBKA ARROW KKKI ENTER FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI KBKA ARROW KKKI ENTER FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI KBKA ARROW KKKI FUNC_SENTENCE TITIKOMA ENTER KKKA
FUNC_STMT -> VAR ID ARITH_OP KBKI KBKA ARROW KKKI FUNC_SENTENCE TITIKOMA KKKA
FUNC_STMT -> VAR ID ARITH_OP NEW FUNC KBKI PETIKSATU FUNC_SENTENCE TITIKOMA PETIKSATU KBKA TITIKOMA
FUNC_SENTENCE -> RETURN ALL
FUNC_SENTENCE -> RETURN STATIC
FUNC_SENTENCE -> RETURN EXP
FUNC_SENTENCE -> RETURN LOGI_OP
FUNC_SENTENCE -> IF_BLOCK
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE RETURN ALL
FUNC_SENTENCE -> FUNC_SENTENCE RETURN STATIC
FUNC_SENTENCE -> FUNC_SENTENCE RETURN EXP
FUNC_SENTENCE -> FUNC_SENTENCE RETURN LOGI_OP
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNCTION -> ID KBKI KBKA
FUNCTION -> ID KBKI PARAM KBKA
FUNCTION -> ID KBKI PARAMFUNGSI KBKA
SWITCH_STMT -> SWITCH KBKI ID KBKA KKKI ENTER CASE_STMT DEFAULT_STMT KKKA
CASE_STMT -> CASE ID TITIKDUA ENTER SENTENCE TITIKOMA ENTER SENTENCE TITIKOMA
DEFAULT_STMT -> DEFAULT TITIKDUA ENTER SENTENCE
TRY_STMT -> TRY KKKI SENTENCE KKKA CATCH_STMT
TRY_STMT -> TRY KKKI SENTENCE KKKA CATCH_STMT FINALLY_STMT
TRY_STMT -> TRY KKKI SENTENCE KKKA FINALLY_STMT
CATCH_STMT -> CATCH KBKI ALL KBKA KKKI SENTENCE TITIKOMA KKKA
CATCH_STMT -> CATCH KKKI SENTENCE TITIKOMA KKKA 
FINALLY_STMT -> FINALLY KKKI SENTENCE TITIKOMA KKKA
CLASS_STMT -> CLASS ID KKKI ENTER METHOD_STMT KKKI ENTER CLASS_SENTENCE TITIKOMA KKKA ENTER KKKA  
CLASS_SENTENCE -> SENTENCE
CLASS_SENTENCE -> FUNC_STMT
WHILE_STMT -> WHILE KBKI SENTENCE KBKA KKKI ENTER LOOP_SENTENCE ENTER KKKA
WHILE_STMT -> DO KKKI ENTER LOOP_SENTENCE ENTER KKKA WHILE KBKI SENTENCE KBKA TITIKOMA
FOR_STMT -> FOR KBKI EXP TITIKOMA EXP TITIKOMA EXP KBKA KKKI ENTER LOOP_SENTENCE ENTER KKKA
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> BREAK
LOOP_SENTENCE -> CONTINUE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER LOOP_SENTENCE
LOOP_SENTENCE -> IF_BLOCK LOOP_SENTENCE
IMPORT_STMT -> IMPORT ID FROM ALL
RANGE_STMT -> RANGE KBKI IDINT COMMA IDINT KBKA
ENTER -> NEWLINE ENTER
ENTER -> NEWLINE
CONST_STMT -> CONST ID ASSIGN_OP ASSIGNMENT TITIKOMA
ID -> KBKI IDINT KBKA
IDINT -> INT
IDINT -> BOOL
IDINT -> ID
IDINT -> NULL
ALL -> IDINT
ALL -> STRING
BOOL -> TRUE
BOOL -> FALSE
BOOL -> NULL